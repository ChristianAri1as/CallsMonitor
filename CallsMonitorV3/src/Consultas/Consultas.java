/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Consultas;

import Conexion.Conector;
import cellRender.CellRenderer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Enumeration;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;


/**
 *
 * @author ChristianArias
 */
public class Consultas extends javax.swing.JFrame {

    /**
     * Creates new form Consultas
     */
    Dimension _pantalla,_pantalla2;
    String ext = "";
    String  perdidas = "",
            ocupadas = "",
            contestadas = "",
            noContestadas = "";
    boolean con = false;
    String sql = "";
    int t = 0,sel = 3;
    String a                =   "";
    String f_ini    = "";
    String f_fin    = "";
    
    Conector conector = new Conector();
    static  Connection cn = Conector.conexion();
    
    public Consultas() {
        initComponents();
        _pantalla2 = Toolkit.getDefaultToolkit().getScreenSize();        
        setSize(_pantalla2.width-300,320);
        setLocationRelativeTo(null);
        jDateChooser1.setDate(new Date());
        jDateChooser2.setDate(new Date());
        jTextField1.setText(cargar_ext.Extenciones.extenciones());
        modelo(jTable1);
        logo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_filtrar = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton5 = new javax.swing.JButton();

        jCheckBox1.setText("Seleccionar todos");
        jCheckBox1.setFocusable(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Perdidas");
        jCheckBox2.setFocusable(false);

        jCheckBox3.setText("Ocupadas");
        jCheckBox3.setFocusable(false);

        jCheckBox4.setText("Contestadas");
        jCheckBox4.setFocusable(false);

        jCheckBox5.setText("No contestadas");
        jCheckBox5.setFocusable(false);

        javax.swing.GroupLayout jPanel_filtrarLayout = new javax.swing.GroupLayout(jPanel_filtrar);
        jPanel_filtrar.setLayout(jPanel_filtrarLayout);
        jPanel_filtrarLayout.setHorizontalGroup(
            jPanel_filtrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jCheckBox1)
            .addComponent(jCheckBox2)
            .addComponent(jCheckBox3)
            .addComponent(jCheckBox4)
            .addComponent(jCheckBox5)
        );
        jPanel_filtrarLayout.setVerticalGroup(
            jPanel_filtrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_filtrarLayout.createSequentialGroup()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox5))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultas");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextField1.setBorder(javax.swing.BorderFactory.createTitledBorder("Extenciones"));

        jDateChooser1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha inicial", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 8))); // NOI18N

        jDateChooser2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha final", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 8))); // NOI18N

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Filtrar llamadas por...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Llamadas entrantes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Llamadas salientes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Todas las llamadas");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Exportar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int x = JOptionPane.showConfirmDialog(this, jPanel_filtrar, "Filtrar llamadas por...", JOptionPane.YES_NO_OPTION);
        if(x == JOptionPane.YES_OPTION){
            a = "";
            for(int c = 1; c<jPanel_filtrar.getComponentCount();c++){
                if(jPanel_filtrar.getComponent(c)instanceof JCheckBox){
                    JCheckBox check = (JCheckBox) jPanel_filtrar.getComponent(c);
                    if(check.isSelected()){
                        switch(c){
                            case 1:perdidas         = "FAILED";
                            case 2:ocupadas         = "BUSY";
                            case 3:contestadas      = "ANSWERED";
                            case 4:noContestadas    = "NO ANSWER";
                                break;
                            default:break;                            
                        }
                        a += check.getText()+" ";
                    }else{
                        switch(c){
                            case 1:perdidas         = "";
                            case 2:ocupadas         = "";
                            case 3:contestadas      = "";
                            case 4:noContestadas    = "";
                                break;
                            default:break;
                        }
                    }
                }//3333921656
            }//01100
        }
        jButton1.setToolTipText("Filtrar llamadas por ["+a+"]");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()){
            for(int x = 1; x<jPanel_filtrar.getComponentCount();x++){
                if(jPanel_filtrar.getComponent(x)instanceof JCheckBox){
                    JCheckBox check = (JCheckBox) jPanel_filtrar.getComponent(x);
                    check.setSelected(true);
                }
            }
        }else{
            for(int x = 1; x<jPanel_filtrar.getComponentCount();x++){
                if(jPanel_filtrar.getComponent(x)instanceof JCheckBox){
                    JCheckBox check = (JCheckBox) jPanel_filtrar.getComponent(x);
                    check.setSelected(false);
                }
            }
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        f_ini    = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate());
        f_fin      = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser2.getDate());
        consultar(0);
        jButton2.setForeground(Color.red);
        jButton3.setForeground(Color.darkGray);
        jButton4.setForeground(Color.darkGray);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        f_ini    = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate());
        f_fin      = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser2.getDate());
        consultar(1);
        jButton2.setForeground(Color.darkGray);
        jButton3.setForeground(Color.red);
        jButton4.setForeground(Color.darkGray); 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        f_ini    = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate());
        f_fin      = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser2.getDate());
        consultar(2);
        jButton2.setForeground(Color.darkGray);
        jButton3.setForeground(Color.darkGray);
        jButton4.setForeground(Color.red); 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new Thread(() -> {
            Exportar.Exportar.toExcel((DefaultTableModel) jTable1.getModel());
        }).start();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Consultas().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JPanel jPanel_filtrar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    void setCellRenderer(JTable jTable1) {
        Enumeration<TableColumn> en = jTable1.getColumnModel().getColumns();
        while (en.hasMoreElements()) {
            TableColumn tc = en.nextElement();
            tc.setCellRenderer(new CellRenderer());
        }
    }
    
    final void modelo(JTable tabla){
        try{
            String [] titulo = {"Fecha","Hora","ID","Origen","Destino","Extencion interna","Duración","Disposición"};
            DefaultTableModel model = new DefaultTableModel(null,titulo);
            tabla.setModel(model);
            tabla.setFillsViewportHeight(true);            
            for(int i = 0; i < tabla.getColumnCount(); i++) {
                tabla.getColumn(tabla.getColumnName(i)).setWidth(0);
                setCellRenderer(tabla);
            } 
            tabla.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            //tabla.getTableHeader().setReorderingAllowed(false);
            tabla.getTableHeader().setResizingAllowed(true);
        }catch(Exception e){
            Logs.emergen.mostrar("Modelo: "+e.getMessage(), "Error");
        }
    }
    
    void consultar(int c){
        switch(c){
            case 0:
                busqueda("dst");
                break;
            case 1:
                busqueda("src");
                break;
            case 2:
                todas();
                break;
            default:
                //Sin seleccion
                break;
        }
        new Thread(() -> {        modelo(sql);        }).start();
    }
    
    void busqueda(String s){
        sql = "SELECT DATE_FORMAT(calldate,'%d/%m/%Y') AS fecha,DATE_FORMAT(calldate,'%h:%i:%s %p') AS calldate,clid,src,dst,SEC_TO_TIME(duration) AS duracion,"
                + "case disposition "
                + "when 'ANSWERED' then 'Contestadas' "
                + "when 'NO ANSWER' then 'No contestadas' "
                + "when 'FAILED' then 'Perdidas' "
                + "when 'BUSY' then 'Ocupada' "
                + "end as disposition,cnam,substring(dstchannel,5,5) as dstchannel "
                + "FROM cdr where date(calldate) BETWEEN '"+f_ini+"' and '"+f_fin+"' "
                + "and "+s+" in("+jTextField1.getText()+") "
                + "and disposition in('"+noContestadas+"','"+contestadas+"','"+ocupadas+"','"+perdidas+"') "
                + "order by time(calldate) asc";
    }
    
    void todas(){
        sql = "SELECT DATE_FORMAT(calldate,'%d/%m/%Y') AS fecha,DATE_FORMAT(calldate,'%h:%i:%s %p') AS calldate,clid,src,dst,SEC_TO_TIME(duration) AS duracion,"
                + "case disposition "
                + "when 'ANSWERED' then 'Contestadas' "
                + "when 'NO ANSWER' then 'No contestadas' "
                + "when 'FAILED' then 'Perdidas' "
                + "when 'BUSY' then 'Ocupada' "
                + "end as disposition,cnam,substring(dstchannel,5,5) as dstchannel "
                + "FROM cdr where date(calldate) BETWEEN '"+f_ini+"' and '"+f_fin+"' "
                + "and (dst in("+jTextField1.getText()+") OR src in ("+jTextField1.getText()+")) "
                + "and disposition in('"+noContestadas+"','"+contestadas+"','"+ocupadas+"','"+perdidas+"') "
                + "order by time(calldate) asc";
    }
    
    void modelo(String sql){
        jTable1.repaint();
        
        String [] registros = new String [jTable1.getColumnCount()];
        int x = 0;
        String aux = null;
        DefaultTableModel model =(DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        try{
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                t += 1;
                registros[0] = rs.getString("fecha");
                registros[1] = rs.getString("Calldate");
                registros[2] = rs.getString("cnam");
                registros[3] = rs.getString("src");
                registros[4] = rs.getString("dst");
                if(rs.getString("dst").equals("602"))registros[5] = rs.getString("dstchannel");else registros[5] = "";
                registros[6] = rs.getString("Duracion");
                registros[7] = rs.getString("disposition");
                
                model.addRow(registros);
                x = rs.getRow();
                aux = Integer.toString(x);
            }
            jTable1.setModel(model);
            model.fireTableDataChanged();
            t = 0;
        }catch(SQLException e){
            //Logs.emergen.mostrar(e.getMessage(), "Error Query");
        }
    }
    
    void logo(){
        File carpeta = new File(Principal.Ubicacion.main());
        File[] listFiles = carpeta.listFiles();
        for (File listFile : listFiles) {
            if (listFile.isFile()) {
                String nombre = listFile.getName();
                if (nombre.contains("logo")) {
                    this.setIconImage(Toolkit.getDefaultToolkit().getImage(listFile.getAbsolutePath()));
                }
            }
        }
    }
    
}
